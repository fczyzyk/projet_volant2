[
  {
    "objectID": "regex.html",
    "href": "regex.html",
    "title": "todayyy",
    "section": "",
    "text": "Important\n\n\n\nPour télécharger le fichier: regex.qmd"
  },
  {
    "objectID": "regex.html#à-la-découverte-des-expressions-régulières-avec-r-et-dautres-packages-au-passage",
    "href": "regex.html#à-la-découverte-des-expressions-régulières-avec-r-et-dautres-packages-au-passage",
    "title": "todayyy",
    "section": "À la découverte des expressions régulières avec R (et d’autres packages au passage…)",
    "text": "À la découverte des expressions régulières avec R (et d’autres packages au passage…)\nLes expressions régulières sont communément appelées regex ou regexp pour regular expressions en anglais. Selon Wikipédia, une expression régulière est “une chaîne de caractères, qui décrit, selon une syntaxe précise, un ensemble de chaînes de caractères possibles”. Si vous n’avez jamais entendu parlé des regex, il se peut que cette définition ne vous aide pas à comprendre le concept. Nous tenterons de démystifier le tout au cours de ces exercices.\nÀ titre de rappel, cet aide-mémoire vous sera drôlement utile!\nEn résumé, ces expressions permettent de décrire des motifs (patterns) à l’aide de formules “relativement simples” pour trouver, valider, extraire ou modifier du texte ou des nombres."
  },
  {
    "objectID": "regex.html#mission-daujourdhui",
    "href": "regex.html#mission-daujourdhui",
    "title": "todayyy",
    "section": "Mission d’aujourd’hui:",
    "text": "Mission d’aujourd’hui:\nRécolter le plus d’information possible qui se trouve dans les tableaux de la page suivante: https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada.\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(magrittr)\n\n\nAttaching package: 'magrittr'\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\nlibrary(rvest)\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\n\n\nURL <- \"https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada\"\n\n\nDébut de solution en base R\n\nbase_raw_html <- read_html(x = URL)\nbase_html_table <- html_elements(x = base_raw_html, css = \"table\")\nbase_tables <- html_table(x = base_html_table)\n\n# base_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]])\n\n⚠️ Erreur! Une colonne n’est pas nommée de façon identique, donc ne fonctionne pas… Corrigeons la situation\n\nnames(base_tables[[3]])[1] <- \"Province/Territoire\"\n\nbase_table <- rbind(base_tables[[1]], base_tables[[2]], base_tables[[3]])\n\nbase_table\n\n# A tibble: 44 × 3\n   `Province/Territoire`  Aéroport                `Exploité par`                \n   <chr>                  <chr>                   <chr>                         \n 1 \"Colombie-Britannique\" Penticton               \"Transports Canada\\n\\t\\t\\t#10…\n 2 \"\"                     Port Hardy              \"Transports Canada\\n\\t\\t\\tC.P…\n 3 \"\"                     Sandspit                \"Transports Canada\\n\\t\\t\\tC.P…\n 4 \"\"                     Havre de Victoria       \"Transports Canada\\n\\t\\t\\t12,…\n 5 \"Manitoba\"             Churchill               \"Transports Canada\\n\\t\\t\\tC.P…\n 6 \"Québec\"               Chevery                 \"Municipalité de la Côte-Nord…\n 7 \"\"                     Lourdes-de-Blanc-Sablon \"Transports Canada\\n\\t\\t\\tAir…\n 8 \"\"                     Sept-Îles               \"Transports Canada\\n\\t\\t\\t100…\n 9 \"\"                     Natashquan              \"Municipalité de Natashquan\\n…\n10 \"\"                     Eastmain River          \"Transports Canada\\n\\t\\t\\ta/s…\n# … with 34 more rows\n\n# Solution en Base R\nbase_table$`Province/Territoire` <- ifelse(test = is.na(base_table$`Province/Territoire`),\n                                  yes = base_table$Territoire, no = base_table$`Province/Territoire`)\nbase_table$Territoire <- NULL\n\nrm(list=(ls(pattern = \"base*\")))"
  },
  {
    "objectID": "regex.html#solution-à-la-tidyverse",
    "href": "regex.html#solution-à-la-tidyverse",
    "title": "todayyy",
    "section": "Solution à la Tidyverse",
    "text": "Solution à la Tidyverse\n\nURL <- \"https://tc.canada.ca/fr/aviation/exploitation-aeroports-aerodromes/liste-aeroports-appartenant-transports-canada\"\n\n# raw_html <- read_html(x = URL)\n# html_table <- html_elements(x = raw_html, css = \"table\")\n# base_tables <- html_table(x = html_table)\n\ntables_pipe <- read_html(x = URL) %>%\nhtml_elements(css = \"table\") %>%\nhtml_table()\n\ntable_pipe <- dplyr::bind_rows(tables_pipe[[1]], tables_pipe[[2]], tables_pipe[[3]], .id = \"type\")\n\ntable_pipe <- table_pipe %>% dplyr::rename(prov_territ = `Province/Territoire`,\n                            aeroport = `Aéroport`,\n                            exploitE_par = `Exploité par`,\n                            territoire = Territoire)\n\n\n# https://tidyr.tidyverse.org/reference/unite.html\n# ou alors dplyr::coalesce\n\n# https://tidyr.tidyverse.org/reference/fill.html\n\ntable_pipe <- table_pipe %>% dplyr::na_if(y = \"\") %>% \n  unite(col = prov_territ, \n        prov_territ, territoire, na.rm = TRUE) %>%\n  dplyr::na_if(y = \"\") %>%\n  tidyr::fill(prov_territ, .direction = \"down\") \n  \n\nprint(as.data.frame(table_pipe))\n\n   type               prov_territ\n1     1      Colombie-Britannique\n2     1      Colombie-Britannique\n3     1      Colombie-Britannique\n4     1      Colombie-Britannique\n5     1                  Manitoba\n6     1                    Québec\n7     1                    Québec\n8     1                    Québec\n9     1                    Québec\n10    1                    Québec\n11    1                    Québec\n12    1                    Québec\n13    1                    Québec\n14    1                    Québec\n15    1                    Québec\n16    1                    Québec\n17    1               Terre-Neuve\n18    1               Terre-Neuve\n19    2      Colombie-Britannique\n20    2      Colombie-Britannique\n21    2      Colombie-Britannique\n22    2      Colombie-Britannique\n23    2                   Alberta\n24    2                   Alberta\n25    2              Saskatchewan\n26    2              Saskatchewan\n27    2                  Manitoba\n28    2                   Ontario\n29    2                   Ontario\n30    2                   Ontario\n31    2                   Ontario\n32    2                    Québec\n33    2                    Québec\n34    2                    Québec\n35    2         Nouveau-Brunswick\n36    2         Nouveau-Brunswick\n37    2         Nouveau-Brunswick\n38    2     Île-du-Prince-Édouard\n39    2           Nouvelle-Écosse\n40    2               Terre-Neuve\n41    2               Terre-Neuve\n42    3 Territoires du Nord-Ouest\n43    3                   Nunavut\n44    3                     Yukon\n                                                  aeroport\n1                                                Penticton\n2                                               Port Hardy\n3                                                 Sandspit\n4                                        Havre de Victoria\n5                                                Churchill\n6                                                  Chevery\n7                                  Lourdes-de-Blanc-Sablon\n8                                                Sept-Îles\n9                                               Natashquan\n10                                          Eastmain River\n11                                      Havre-Saint-Pierre\n12                                    Îles-de-la-Madeleine\n13                                             Waskaganish\n14                                                Kuujjuaq\n15                                           Schefferville\n16                                                Wemindji\n17                                                  Wabush\n18                                             St. Anthony\n19                                          Victoria (YYJ)\n20                                         Vancouver (YVR)\n21                                     Prince George (YXS)\n22                                           Kelowna (YLW)\n23                                          Edmonton (YEG)\n24                                           Calgary (YYC)\n25                                         Saskatoon (YXE)\n26                                            Regina (YQR)\n27   Aéroport James Armstrong Richardson de Winnipeg (YWG)\n28                                       Thunder Bay (YQT)\n29                                            London (YXU)\n30                                   Toronto Pearson (YYZ)\n31               Aéroport Macdonald-Cartier d’Ottawa (YOW)\n32       Aéroport Pierre-Elliott-Trudeau de Montréal (YUL)\n33                 Aéroport international de Mirabel (YMX)\n34                    Aéroport Jean-Lesage de Québec (YQB)\n35                                       Fredericton (YFC)\n36                                     Grand Moncton (YQM)\n37                                        Saint John (YSJ)\n38                                     Charlottetown (YYG)\n39                              Stanfield de Halifax (YHZ)\n40                                            Gander (YQX)\n41                                        St. John’s (YYT)\n42                                       Yellowknife (YZF)\n43                                           Iqaluit (YFB)\n44 Aéroport international Erik-Nielsen de Whitehorse (YXY)\n                                                                                                                    exploitE_par\n1           Transports Canada\\n\\t\\t\\t#109-3000 Airport Road\\n\\t\\t\\tPenticton (Colombie-Britannique)  V2A 8X1\\n\\t\\t\\t250-770-4414\n2  Transports Canada\\n\\t\\t\\tC.P. 460\\n\\t\\t\\t3675 Byng Road\\n\\t\\t\\tPort Hardy (Colombie-Britannique)  V0N 2P0\\n\\t\\t\\t250-949-6424\n3                          Transports Canada\\n\\t\\t\\tC.P. 439\\n\\t\\t\\tSandspit (Colombie-Britannique)  V0T 1T0\\n\\t\\t\\t250-637-1149\n4                      Transports Canada\\n\\t\\t\\t12, rue Erie\\n\\t\\t\\tVictoria (Colombie-Britannique)  V8V 1Y4\\n\\t\\t\\t250-363-3578\n5                                    Transports Canada\\n\\t\\t\\tC.P. 1059\\n\\t\\t\\tChurchill (Manitoba)  R0B 0E0\\n\\t\\t\\t204-675-8868\n6                    Municipalité de la Côte-Nord-du Golfe-du Saint-Laurent\\n\\t\\t\\tChevery (Québec)  G0G 1G0\\n\\t\\t\\t418-787-2215\n7                     Transports Canada\\n\\t\\t\\tAirport Road\\n\\t\\t\\tLourdes-de-Blanc-Sablon (Québec)  G0G 1W0\\n\\t\\t\\t418-461-2514\n8         Transports Canada\\n\\t\\t\\t1000, boul. Laure Est\\n\\t\\t\\tC.P. 2001\\n\\t\\t\\tSept-Îles (Québec)  G4R 4K2\\n\\t\\t\\t418-962-8211\n9                         Municipalité de Natashquan\\n\\t\\t\\tAirport Road\\n\\t\\t\\tNatashquan (Québec)  G0G 2E0\\n\\t\\t\\t418-726-3273\n10                        Transports Canada\\n\\t\\t\\ta/s du conseil de bande\\n\\t\\t\\tEastmain (Québec)  J0M 1W0\\n\\t\\t\\t819-977-0333\n11    Transports Canada\\n\\t\\t\\t1550 B, route de l'Aéroport\\n\\t\\t\\tHavre-Saint-Pierre (Québec)\\n\\t\\t\\tG0G 1P0\\n\\t\\t\\t418-538-0627\n12     Transports Canada\\n\\t\\t\\t1-210, chemin de l’Aéroport\\n\\t\\t\\tHavre-aux-Maisons (Québec)\\n\\t\\t\\tG4T 5L2\\n\\t\\t\\t418-969-2180\n13                     Transports Canada\\n\\t\\t\\ta/s du conseil de bande\\n\\t\\t\\tWaskaganish (Québec)  J0M 1R0\\n\\t\\t\\t819-895-8925\n14                          Administration régionale Kativik\\n\\t\\t\\tC.P. 9\\n\\t\\t\\tKuujjuaq (Québec)  J0M 1C0\\n\\t\\t\\t819-964-2968\n15     Société aéroportuaire de Schefferville\\n\\t\\t\\t78 Atlantic Road\\n\\t\\t\\tSchefferville (Québec)  G0G 2T0\\n\\t\\t\\t418-585-3544\n16                        Transports Canada\\n\\t\\t\\ta/s du conseil de bande\\n\\t\\t\\tWemindji (Québec)  J0M 1L0\\n\\t\\t\\t819-978-3936\n17                              Transports Canada\\n\\t\\t\\t2 Airport Road\\n\\t\\t\\tWabush (Terre-Neuve)  A0R 1B0\\n\\t\\t\\t709-282-5412\n18                         Transports Canada\\n\\t\\t\\t1 Airport Road\\n\\t\\t\\tSt. Anthony (Terre-Neuve)  A0K 4S0\\n\\t\\t\\t709-454-3192\n19                                                                                      Administration aéroportuaire de Victoria\n20                                                                       Administration de l’aéroport international de Vancouver\n21                                                     Administration aéroportuaire de Prince George Inc. (en anglais seulement)\n22                                                                                       Ville de Kelowna (en anglais seulement)\n23                                                      Administration des aéroports régionaux d’Edmonton (en anglais seulement)\n24                                                                Administration aéroportuaire de Calgary (en anglais seulement)\n25                                                              Administration aéroportuaire de Saskatoon (en anglais seulement)\n26                                                                                        Administration aéroportuaire de Regina\n27                                                                                 Administration aéroportuaire de Winnipeg Inc.\n28                                         Administration de l’aéroport international de Thunder Bay Inc. (en anglais seulement)\n29                                             Administration de l’aéroport international du Grand London (en anglais seulement)\n30                                                                                       Autorité aéroportuaire du Grand Toronto\n31                                                         Administration de l’aéroport international Macdonald-Cartier d'Ottawa\n32                                                                                                         Aéroports de Montréal\n33                                                                                                         Aéroports de Montréal\n34                                                                                                       Aéroport de Québec Inc.\n35                                                                     Administration de l’aéroport international de Fredericton\n36                                                              Administration de l’aéroport international du Grand Moncton Inc.\n37                                                                                                   Aéroport de Saint John Inc.\n38                                                     Administration de l’aéroport de Charlottetown Inc. (en anglais seulement)\n39                                                                         Administration de l’aéroport international de Halifax\n40                                              Administration de l’aéroport international de Gander Inc. (en anglais seulement)\n41                                                                      Administration de l’aéroport international de St. John’s\n42                                                                                    Gouvernement des Territoires du Nord-Ouest\n43                                                                                                       Gouvernement du Nunavut\n44                                                                                                         Gouvernement du Yukon"
  },
  {
    "objectID": "regex.html#un-peu-de-regex",
    "href": "regex.html#un-peu-de-regex",
    "title": "todayyy",
    "section": "Un peu de regex",
    "text": "Un peu de regex\nAllons extraire les codes d’aéroports. 3 solutions :\n\ntable_pipe2 <- mutate(table_pipe, .keep=\"all\", new_col = str_extract_all(string = aeroport, pattern = \"\\\\([A-Z][A-Z][A-Z]\\\\)\"))        # = \"\\\\([A-Z]{3}\\\\)\"\n\ntable_pipe3 <- mutate(table_pipe, .keep=\"all\", new_col = str_extract(string = aeroport, pattern = \"\\\\([A-Z][A-Z][A-Z]\\\\)\"))        # = \"\\\\([A-Z]{3}\\\\)\"\n\ntable_pipe4 <- tidyr::extract(data = table_pipe, col = aeroport, into = \"code\", regex = \"([A-Z]{3})\", remove = FALSE)\n\nEt supprimons-les des noms de villes :\n\ntable_pipe5 <- table_pipe4\ntable_pipe5$aeroport <- \n  table_pipe5$aeroport %>% stringr::str_remove_all(pattern = \" \\\\([A-Z]{3}\\\\)\")\n# au lieu d'inclure l'espace dans l'expression régulière, nous aurions pu utiliser str_squish\n\nSpécifions les types :\n\ntable_pipe6 <- table_pipe5 %>% mutate(type = recode(type, \"1\" = \"Petits\", \"2\" = \"Nationaux\", \"3\" = \"Nationaux exploités admin\"))"
  }
]